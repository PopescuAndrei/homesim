/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ro.fils.smarthome.view;

import java.util.Map;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import ro.fils.smarthome.util.FilesUtils;

/**
 *
 * @author andre
 */
public class Chart extends javax.swing.JFrame {

    /**
     * Creates new form Chart
     */
    public Chart() {
        initComponents();
        Map<String, Double> map = FilesUtils.getTraveledKmsForLogFile(System.getProperty("user.home") + "\\Desktop\\logs\\" + "Simulation_Tue_Jun_14_17-28-37_EEST_2016.txt", 15, "Mosulica");
        JFreeChart traveledMetersChart = ChartFactory.createBarChart("TraveledKms",
                "Week Day",
                "Distance [m]",
                createDataSetForMetersChart(map),
                PlotOrientation.VERTICAL,
                true,
                true,
                false);
        ChartPanel chartPanel = new ChartPanel(traveledMetersChart);
        this.add(chartPanel);
        this.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                Chart chart = new Chart();
                chart.pack();
            }
        });
    }
    private CategoryDataset createDataSetForMetersChart(Map<String, Double> map) {
        final String MONDAY = "Monday";
        final String TUESDAY = "Tuesday";
        final String WEDNESDAY = "Wednesday";
        final String THURSDAY = "Thursday";
        final String FRIDAY = "Friday";
        final String SATURDAY = "Saturday";
        final String SUNDAY = "Sunday";

        final DefaultCategoryDataset dataSet = new DefaultCategoryDataset();
        dataSet.addValue(map.get(MONDAY), MONDAY, MONDAY);
        dataSet.addValue(map.get(TUESDAY), TUESDAY, TUESDAY);
        dataSet.addValue(map.get(WEDNESDAY), WEDNESDAY, WEDNESDAY);
        dataSet.addValue(map.get(THURSDAY), THURSDAY, MONDAY);
        dataSet.addValue(map.get(FRIDAY), FRIDAY, FRIDAY);
        dataSet.addValue(map.get(SATURDAY), SATURDAY, SATURDAY);
        dataSet.addValue(map.get(SUNDAY), SUNDAY, SUNDAY);
        return dataSet;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
